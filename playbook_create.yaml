---
  - name: Start CRC 1.7.0 and deploy Kogito Operator and CLI
    hosts: localhost
    gather_facts: true

    vars:
      kogito_tag: "0.8.0"
      ram: "16384" #MB
      libvirt_version: "4.3.1"
      kube_password: "{{ lookup('file', '/home/{{ ansible_user_id }}/.crc/cache/crc_libvirt_{{ libvirt_version }}/kubeadmin-password') }}"

    vars_prompt:
      - name: "nameSpace"
        prompt: "Insert your Project Name/ NameSpace"
      - name: "PullSecret"
        prompt: "Insert your Pull secret"

    tasks:
      - debug: msg="Project Name {{ nameSpace }}"

      - name: Check api in hosts
        lineinfile:
          path: /etc/hosts
          line: 192.168.130.11   api.crc.testing
          create: yes

      - name: Check oauth in hosts
        lineinfile:
          path: /etc/hosts
          line: 192.168.130.11   oauth-openshift.apps-crc.testing
          create: yes

      - name: Check console in hosts
        lineinfile:
          path: /etc/hosts
          line: 192.168.130.11   console-openshift-console.apps-crc.testing
          create: yes

      - name: Copy Kogito cli
        get_url:
          url: "https://github.com/kiegroup/kogito-cloud-operator/releases/download/v{{ kogito_tag }}/kogito-{{ kogito_tag }}-linux-amd64.tar.gz"
          dest: "/tmp/kogito-{{ kogito_tag }}-linux-amd64.tar.gz"

      - name: Extract Kogito cli archive
        unarchive:
          src: "/tmp/kogito-{{ kogito_tag }}-linux-amd64.tar.gz"
          dest: "/tmp/"

      - name: Check that oc exists in /home/{{ansible_user_id}}/.local/bin/
        stat:
          path: "/home/{{ ansible_user_id }}/.local/bin/kogito"
        register: stat_result

      - name: Creates user home kogito dir
        file:
          path: "/home/{{ ansible_user_id}}/.local/bin/"
          state: directory
        when: stat_result.stat.exists == False

      - name: Move kogito from /tmp to /home/{{ansible_user_id}}/.local/bin
        command: "mv /tmp/kogito /home/{{ansible_user_id}}/.local/bin/"
        when: stat_result.stat.exists == False

      - name: CRC setup
        shell: "crc setup"
        register: crc_result

      - debug: msg="{{ crc_result }}"

      - name: Write pull secret
        copy:
          content: "{{ PullSecret }}"
          dest: "~/.crc/crc-pull-secret"

      - name: Start CRC with {{ ram }}MB (~ 10 minutes)
        shell: "crc start -m {{ ram }} -p ~/.crc/crc-pull-secret"

      - name: Login crc
        shell: "oc login -u kubeadmin -p {{ kube_password }} https://api.crc.testing:6443"

      - name: Create {{ nameSpace }}
        shell: "oc new-project {{ nameSpace }}"

      - name: Use {{ nameSpace }} proect
        shell: "oc project {{ nameSpace }}"

      - name: Kogito use {{ nameSpace }}
        shell: "kogito use-project {{ nameSpace }}"
        register: kogito_use_project_result
        ignore_errors: yes

      - debug: msg="{{ kogito_use_project_result }}"

      - name: Kogito install operator on {{ nameSpace }}
        shell: "kogito install operator -p {{ nameSpace }}"
        register: kogito_install_operator_result

      - name: Check AvailableReplica on Kogito operator first on {{ nameSpace }}
        shell: "kubectl get pods --selector=name=kogito-operator -o jsonpath='{.items[*].status.phase}'"
        register: resultOne

      - debug: msg = "{{ resultOne }}"

      - name: simulate running wait for up to 60 sec, poll every 10 sec
        command: "kubectl get pods --selector=name=kogito-operator -o jsonpath='{.items[*].status.phase}'"
        async: 30
        poll: 10
        register: result
        until: result.stdout == "Running"
        retries: 20
        ignore_errors: true

      - debug: msg = "{{ result }}"

       # "kubectl get pods --selector=name=kogito-operator -o jsonpath='{.items[*]}'"



      - debug: msg="Project Name {{ nameSpace }}"

      - debug: msg="Your Kube Password is {{ kube_password }}"